[tool.poetry]
name = "testing_robot"
version = "0.1.0"
description = ""
authors = ["amrita <matta.amrita@gmail.com>"]
readme = "README.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.12"
robotframework = "^7.1.1"
requests = "^2.32.3"
robotframework-tidy = "^4.14.0"
robotframework-seleniumlibrary = "^6.6.1"
robotframework-faker = "^5.0.0"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
invoke = "^2.2.0"
isort = "^5.13.2"

[tool.poetry.group.test.dependencies]
allure-pytest = "^2.13.5"

[tool.pytest.ini_options]
addopts = """
    -v
    -s
    --html=report/report.html
"""
# log_cli : pytest will output logging records as they are emitted directly into the console.
# Otherwise, the log is printed to console only if the test fails.
# log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

log_file = "pytest.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

[tool.black]
line-length = 120
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 120
